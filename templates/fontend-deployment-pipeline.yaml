---
AWSTemplateFormatVersion: 2010-09-09


Parameters:
  GitRepo:
    Type: String

  GitBranch:
    Type: String

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String

  Cluster:
    Type: String

  Service:
    Type: String
    
  S3Bucket:
    Type: String
    
  S3Path:
    Type: String
    
  GitType:
    Type: String

Conditions:
  IsGitHub: !Equals 
    - !Ref GitType
    - GitHub
  IsCodeCommit: !Equals 
    - !Ref GitType
    - CodeCommit
     
  
Resources:
  Repository:
    Type: AWS::ECR::Repository
    DeletionPolicy: Retain

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
                  - codecommit:*
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action: s3:*
              - Resource: !Sub arn:aws:s3:::${S3Bucket}/*
                Effect: Allow
                Action: s3:*
              - Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
                  - codecommit:*

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
            version: 0.2
            env:
                variables:
                    CACHE_CONTROL: "86400"
                    S3_BUCKET: ${S3Bucket1} 
                    BUILD_ENV: "prod"
            phases:
                install:
                    commands:
                        - echo Installing source NPM dependencies...
                        - npm install
                        - npm install -g @angular/cli 
                        - echo ${S3path1}
                build:
                    commands:
                        - echo Build started on `date`
                        - ng build --$BUILD_ENV
                post_build:
                     commands:
                        - aws s3 cp ./dist s3://${S3Bucket1} --recursive --acl public-read --cache-control "max-age=$CACHE_CONTROL"
                        - echo Build completed on `date`
            artifacts:
                files:
                    - '**/*'
                base-directory: 'dist*'
                discard-paths: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        EnvironmentVariables: 
          - Name: S3Bucket1
            Value: !Ref S3Bucket
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: IsGitHub
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
    
  MyFrontEndRepo:
    Type: AWS::CodeCommit::Repository
    Condition: IsCodeCommit
    Properties:
      RepositoryName: !Ref GitRepo
      RepositoryDescription: This is a repository for my project with code from MySourceCodeBucket.
    
  PipelineCodeComit: 
    Type: AWS::CodePipeline::Pipeline
    DependsOn: MyFrontEndRepo
    Condition: IsCodeCommit
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration: 
                RepositoryName: !Ref GitRepo
                BranchName: !Ref GitBranch 
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1 
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/
  CloneUrlFrontEnd:
    Description: The URL where the created repository is available.
    Value: !GetAtt MyFrontEndRepo.CloneUrlHttp
