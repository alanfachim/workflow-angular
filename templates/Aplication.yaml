AWSTemplateFormatVersion: 2010-09-09


Description: >
  This template shows how to use AWS CodePipeline and AWS CodeBuild to build an
  automated continuous deployment pipeline to Amazon Elastic Container Service
  (Amazon ECS) using clusters powered by AWS Fargate or Amazon Elastic Compute
  Cloud (Amazon EC2).
Parameters:
  LaunchType:
    Type: String
    Default: Fargate
    AllowedValues:
      - Fargate
      - EC2
    Description: >
      The launch type for your service. Selecting EC2 will create an Auto
      Scaling group of t2.micro instances for your cluster. See
      https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html
      to learn more about launch types.
  GitHubUser:
    Type: String
    Default: ""
    Description: Your username on GitHub.

  GitHubFrontRepo:
    Type: String
    Default: frontRepo
    Description: The repo name of the sample service.
    
  GitHubBffRepo:
    Type: String
    Default: bffRepo
    Description: The repo name of the sample service.

  GitBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.
    
  S3Path:
    Type: String
    Default: www
    Description: The branch of the repo to continuously deploy.
    
  GitType:
    Type: String
    Default: CodeCommit
    AllowedValues:
      - CodeCommit
      - GitHub
    Description: Tipo do git
  
  GitHubToken:
    Type: String
    Default: ""
    NoEcho: true
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)
  TemplateBucket:
    Type: String
    Default: ecs-refarch-continuous-deployment
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubFrontRepo:
        default: "Repo"
      GitBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
      LaunchType:
        default: "Launch Type"
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - LaunchType
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitBranch
          - GitHubUser
          - GitHubToken
          - GitType
      - Label:
          default: Stack Configuration
        Parameters:
          - TemplateBucket


Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/ecs-cluster.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  BFFPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitRepo: !Ref GitHubBffRepo
        GitBranch: !Ref GitBranch
        GitType: !Ref GitType

  FrontEndPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/fontend-deployment-pipeline.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        Service: !GetAtt Service.Outputs.Service
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitRepo: !Ref GitHubFrontRepo
        GitBranch: !Ref GitBranch
        GitType: !Ref GitType
        S3Bucket: !Ref TemplateBucket
        S3Path: !Ref S3Path

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/load-balancer.yaml"
      Parameters:
        LaunchType: !Ref LaunchType
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId
        mybucket: !Ref TemplateBucket

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/vpc.yaml"
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/service.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        LaunchType: !Ref LaunchType
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        
  Cognito:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${TemplateBucket}.s3.sa-east-1.amazonaws.com/templates/cognito.yaml"
      Parameters: 
        appUrl: !GetAtt LoadBalancer.Outputs.OutUrl
        appPrefixUrl: !Ref TemplateBucket 
        AuthName: "Func"
        userPoolId: sa-east-1_kONoTc2SS
        
        
    



Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt BFFPipeline.Outputs.PipelineUrl
    
  FrontEndPipeline:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt FrontEndPipeline.Outputs.PipelineUrl
    
  CloneUrlFrontEnd:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt FrontEndPipeline.Outputs.CloneUrlFrontEnd
    
  CloneUrlBff:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt BFFPipeline.Outputs.CloneUrlBff
   
  mainUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt LoadBalancer.Outputs.OutUrl
    
  cognito:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt Cognito.Outputs.UserPoolClientId2
    
    
    
    